;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 17/9/2024 20:45:15
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x00000004013C  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x000000  	0
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x000100  	256
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x000000  	0
0x0022	0x00011E  	286
0x0024	0x000000  	0
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x000000  	0
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000000  	0
0x003C	0x000000  	0
0x003E	0x000000  	0
0x0040	0x000000  	0
0x0042	0x000000  	0
0x0044	0x000000  	0
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x000000  	0
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
_main:
0x013C	0x20800F  	MOV	#2048, W15
0x013E	0x20FFF0  	MOV	#4095, W0
0x0140	0xB7A020  	MOV	WREG, SPLIM
0x0142	0x200000  	MOV	#0, W0
0x0144	0xB7A034  	MOV	WREG, PSVPAG
0x0146	0x200040  	MOV	#4, W0
0x0148	0xB72044  	IOR	CORCON
;Ejemplo1.c,11 :: 		void main()  {
;Ejemplo1.c,12 :: 		TRISBbits.TRISB0 = 0;
0x014A	0xA902C6  	BCLR.B	TRISBbits, #0
;Ejemplo1.c,13 :: 		TRISBbits.TRISB1 = 0;
0x014C	0xA922C6  	BCLR.B	TRISBbits, #1
;Ejemplo1.c,14 :: 		LATBbits.LATB0 = 0;
0x014E	0xA902CA  	BCLR.B	LATBbits, #0
;Ejemplo1.c,15 :: 		LATBbits.LATB1 = 0;
0x0150	0xA922CA  	BCLR.B	LATBbits, #1
;Ejemplo1.c,18 :: 		T1CON = 0x0000;
0x0152	0xEF2104  	CLR	T1CON
;Ejemplo1.c,19 :: 		T3CON = 0x0000;
0x0154	0xEF2112  	CLR	T3CON
;Ejemplo1.c,23 :: 		TMR1 = 0;
0x0156	0xEF2100  	CLR	TMR1
;Ejemplo1.c,24 :: 		TMR3 = 0;
0x0158	0xEF210A  	CLR	TMR3
;Ejemplo1.c,25 :: 		T1CONbits.TCKPS0 = 1;
0x015A	0xA88104  	BSET.B	T1CONbits, #4
;Ejemplo1.c,26 :: 		T1CONbits.TCKPS1 = 1;
0x015C	0xA8A104  	BSET.B	T1CONbits, #5
;Ejemplo1.c,27 :: 		T2CONbits.T32 = 1;
0x015E	0xA86110  	BSET.B	T2CONbits, #3
;Ejemplo1.c,30 :: 		PR1 = 29297;
0x0160	0x272710  	MOV	#29297, W0
0x0162	0xB7A102  	MOV	WREG, PR1
;Ejemplo1.c,32 :: 		PR3 = 0b110100011;
0x0164	0x201A30  	MOV	#419, W0
0x0166	0xB7A10E  	MOV	WREG, PR3
;Ejemplo1.c,33 :: 		PR2 = 0b1001110111100000;
0x0168	0x29DE00  	MOV	#40416, W0
0x016A	0xB7A10C  	MOV	WREG, PR2
;Ejemplo1.c,38 :: 		IFS0bits.T3IF = 0;
0x016C	0xA9E084  	BCLR.B	IFS0bits, #7
;Ejemplo1.c,39 :: 		IFS0bits.T1IF = 0;
0x016E	0xA96084  	BCLR.B	IFS0bits, #3
;Ejemplo1.c,42 :: 		IEC0bits.T3IE = 1;
0x0170	0xA8E08C  	BSET.B	IEC0bits, #7
;Ejemplo1.c,43 :: 		IEC0bits.T1IE = 1;
0x0172	0xA8608C  	BSET.B	IEC0bits, #3
;Ejemplo1.c,47 :: 		T2CONbits.TON = 1;
0x0174	0xA8E111  	BSET	T2CONbits, #15
;Ejemplo1.c,48 :: 		T1CONbits.TON = 1;
0x0176	0xA8E105  	BSET	T1CONbits, #15
;Ejemplo1.c,50 :: 		while( 1 )
L_main0:
;Ejemplo1.c,51 :: 		asm nop;
0x0178	0x000000  	NOP
0x017A	0x37FFFE  	BRA	L_main0
;Ejemplo1.c,52 :: 		}
L_end_main:
L__main_end_loop:
0x017C	0x37FFFF  	BRA	L__main_end_loop
; end of _main
_detectarIntT3:
0x011E	0xF80034  	PUSH	PSVPAG
0x0120	0xF80036  	PUSH	RCOUNT
0x0122	0x781F80  	PUSH	W0
0x0124	0x200020  	MOV	#2, W0
0x0126	0x09000C  	REPEAT	#12
0x0128	0x781FB0  	PUSH	[W0++]
;Ejemplo1.c,6 :: 		void detectarIntT3() org 0x0022  {
;Ejemplo1.c,7 :: 		LATBbits.LATB1 = !LATBbits.LATB1;
0x012A	0xAA22CA  	BTG	LATBbits, #1
;Ejemplo1.c,8 :: 		IFS0bits.T3IF = 0;  // Borramos la bandera de interrupción T2
0x012C	0xA9E084  	BCLR.B	IFS0bits, #7
;Ejemplo1.c,9 :: 		}
L_end_detectarIntT3:
0x012E	0x2001A0  	MOV	#26, W0
0x0130	0x09000C  	REPEAT	#12
0x0132	0x78104F  	POP	[W0--]
0x0134	0x78004F  	POP	W0
0x0136	0xF90036  	POP	RCOUNT
0x0138	0xF90034  	POP	PSVPAG
0x013A	0x064000  	RETFIE
; end of _detectarIntT3
_detectarIntT1:
0x0100	0xF80034  	PUSH	PSVPAG
0x0102	0xF80036  	PUSH	RCOUNT
0x0104	0x781F80  	PUSH	W0
0x0106	0x200020  	MOV	#2, W0
0x0108	0x09000C  	REPEAT	#12
0x010A	0x781FB0  	PUSH	[W0++]
;Ejemplo1.c,1 :: 		void detectarIntT1() org 0x001a  {
;Ejemplo1.c,2 :: 		LATBbits.LATB0 = !LATBbits.LATB0;
0x010C	0xAA02CA  	BTG	LATBbits, #0
;Ejemplo1.c,3 :: 		IFS0bits.T1IF = 0;  // Borramos la bandera de interrupción T1
0x010E	0xA96084  	BCLR.B	IFS0bits, #3
;Ejemplo1.c,4 :: 		}
L_end_detectarIntT1:
0x0110	0x2001A0  	MOV	#26, W0
0x0112	0x09000C  	REPEAT	#12
0x0114	0x78104F  	POP	[W0--]
0x0116	0x78004F  	POP	W0
0x0118	0xF90036  	POP	RCOUNT
0x011A	0xF90034  	POP	PSVPAG
0x011C	0x064000  	RETFIE
; end of _detectarIntT1
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0100      [30]    _detectarIntT1
0x011E      [30]    _detectarIntT3
0x013C      [66]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x010E       [2]    PR3
0x0102       [2]    PR1
0x0110       [2]    T2CONbits
0x008C       [2]    IEC0bits
0x0084       [2]    IFS0bits
0x010C       [2]    PR2
0x0104       [2]    T1CONbits
0x0104       [2]    T1CON
0x02CA       [2]    LATBbits
0x02C6       [2]    TRISBbits
0x010A       [2]    TMR3
0x0100       [2]    TMR1
0x0112       [2]    T3CON
0x0100       [2]    TMR1
0x0102       [2]    PR1
0x0104       [2]    T1CON
0x010A       [2]    TMR3
0x010C       [2]    PR2
0x010E       [2]    PR3
0x0112       [2]    T3CON
